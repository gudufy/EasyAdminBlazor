@page "/Admin/Dict"

<Split Basis="500px" FirstPaneMinimumSize="500px" ShowBarHandle="false">
    <FirstPaneTemplate>
        <AdminTable TItem="SysDict" EditDialogSize="Size.Large" ShowExtendButtons
                    DefaultWhere="x => x.ParentId == 0" OnClickRowCallback="OnClickRowCallback">
            <TableColumns>
                <TableColumn @bind-Field="context.Name" />
                <TableColumn @bind-Field="context.Description" />
            </TableColumns>
        </AdminTable>
    </FirstPaneTemplate>
    <SecondPaneTemplate>
        @if (selectedCategory != null)
        {
            <AdminTable TItem="SysDict" EditDialogSize="Size.Large" ShowExtendButtons IsMultipleSelect OnQueryAsync="OnQueryItemAsync" OnBeforeSaveAsync="OnBeforeSaveAsync">
                <TableColumns>
                    <TableColumn @bind-Field="context.Name" />
                    <TableColumn @bind-Field="context.Value" />
                    <TableColumn @bind-Field="context.Description" Rows="3" />
                </TableColumns>
            </AdminTable>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                请选择一个字典分类查看字典项。
            </div>
        }
    </SecondPaneTemplate>
</Split>

@code {
    [Inject] IAggregateRootRepository<SysDict> _repo { get; set; }

    private SysDict selectedCategory;

    /// <summary>
    /// 异步查询指定分类的字典项数据。
    /// </summary>
    /// <param name="options">查询分页选项。</param>
    /// <returns>查询数据结果。</returns>
    private async Task<QueryData<SysDict>> OnQueryItemAsync(QueryPageOptions options)
    {
        var query = _repo.Select.Where(x => x.ParentId == selectedCategory.Id)
                                .WhereDynamicFilter(options.ToDynamicFilter());
        var items = await query.OrderBy(a => a.Id).ToListAsync();

        return new QueryData<SysDict>
        {
            Items = items,
            TotalCount = items.Count
        };
    }

    /// <summary>
    /// 保存前的操作
    /// </summary>
    /// <param name="e"></param>
    /// <returns></returns>
    private Task OnBeforeSaveAsync(AdminSaveEventArgs<SysDict> e)
    {
        if(e.ChangedType == ItemChangedType.Add) e.Item.ParentId = selectedCategory.Id;
        return Task.CompletedTask;
    }

    /// <summary>
    /// 处理字典分类选中事件。
    /// </summary>
    /// <param name="args">事件参数。</param>
    private async Task OnClickRowCallback(SysDict row)
    {
        selectedCategory = row;

        await InvokeAsync(StateHasChanged);
    }
}
